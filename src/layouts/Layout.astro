---
import Footer from '@/sections/Footer.astro';
import Header from '@/sections/Header.astro';
// Supports weights 100-900
import '@fontsource-variable/geologica';

interface Props {
	title: string;
}

const { title } = Astro.props;

import {getI18N} from '@/i18n'

const {currentLocale} = Astro

const i18n = getI18N({currentLocale})
---

<!doctype html>
<html lang={currentLocale}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Desarrollador Web especializado en crear experiencias digitales" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		<script is:inline>
			window.getThemePreference = () => {
				const localItem = typeof localStorage !== 'undefined' && localStorage.getItem('theme') 
				if(localItem) return localItem
				return window.matchMedia('(prefers-color-scheme: dark)').matches ? "dark" : "light"
			}
			const isDark = window.getThemePreference() === "dark";
			document.documentElement.classList.toggle("dark", isDark);
		</script>
	</head>
	<body>
		<Header />
		<slot />
		<Footer />
		<script>
			import '@/scripts/menu';
		</script>
	</body>
</html>
<style is:global>
	:root {
		color-scheme: light dark;
		--color-primary: #ddd;
		--color-secondary: #333;

		--background-color: #333;
	}
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}
	.dark {
		color: var(--color-primary);
		background-color: var(--background-color);
	}

	html {
		font-family: 'Geologica Variable', sans-serif;
		background-color: #bbb;
	}


.dark .nav-links a {
  color: red;
	font-weight: bolder;
}
.dark .moon {
    position: absolute;
    opacity: 1;
    transform: rotate(90deg);
    transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
	color: red;
  }
a {
  text-decoration: none;
  color: inherit;
}
/* Hiding class, making content visible only to screen readers but not visually */
	/* "sr" meaning "screen-reader" */
	.sr-only:not(:focus):not(:active) {
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		height: 1px;
		overflow: hidden;
		position: absolute;
		white-space: nowrap;
		width: 1px;
	}

</style>
